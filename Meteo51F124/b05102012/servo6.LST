C51 COMPILER V9.00   SERVO6                                                                10/05/2012 13:57:29 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SERVO6
OBJECT MODULE PLACED IN servo6.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe servo6.c DB OE BR

line level    source

   1          
   2          #include "c8051f120.h"
   3          #include "init.h"
   4          #include "comport.h"
   5          #include <intrins.h>
   6          #include <ctype.h>
   7          #include <stdio.h>
   8          #include <stdlib.h>
   9          #include <math.h> 
  10          //system
  11          #define SYSCLK      24500000  // (24856840L * 1 / 1) 
  12          #define FREQT0 1166 //Hz
  13          #define PCACLK  1166
  14          
  15          //отладочные
  16          sbit P3_3 = P3^3;
  17          sbit LED = P1^6;
  18          sbit LED2 = P2^6;
  19          sbit BUTTON = P3^7;
  20          xdata unsigned char InitFlag;
  21          xdata unsigned int iter;
  22          
  23          //ADC
  24          sfr16 ADC0     = 0xbe;   // ADC0 data
  25          bit DavlFlag = 0;
  26          xdata long Result;                    
  27          xdata unsigned int_dec = 256;    
  28          xdata long accumulator = 0L;       
  29          //LIR
  30          sbit LIR_DATA = P2^2; //P2^0;
  31          sbit LIR_SCK = P2^1;
  32          
  33          xdata unsigned int LirData, LirTarget;
  34          xdata unsigned char shim_pr=0;
  35          xdata float A=0.0, A_zad=0.0, V=0.0, V_zad=0.0, V_pr=0.0, Accel=0, A_pr=0.0, tau=0.0;
  36          
  37          typedef union INT {                   
  38             unsigned int i;
  39             unsigned char b[2];
  40          } INT;
  41          //Veter
  42          bit VeterFlag = 0;
  43          sbit WSpeed = P1^1;
  44          sbit WAngle = P1^3;
  45          
  46          xdata float Vspeed=0, Angle=0;
  47          xdata unsigned long RTC, RTCV, RTCA;
  48          xdata unsigned long TV,TA;
  49          
  50          typedef union FLOAT {                   
  51             float f;
  52             unsigned char b[4];
  53          } FLOAT;
  54          //UART0
  55          #define NBFM            50
C51 COMPILER V9.00   SERVO6                                                                10/05/2012 13:57:29 PAGE 2   

  56          xdata unsigned char BuferFromModem [NBFM]; 
  57          xdata unsigned char wBFM, rBFM, marBFM;
  58          xdata unsigned int u0timer;
  59          
  60          #define SIZE_BUFFER0            50
  61          xdata char BufferInModem[SIZE_BUFFER0]; 
  62          xdata int r0, rk;
  63          bit flTransmiter;       
  64          
  65          //GPS
  66          typedef union LINT {                   
  67             unsigned long i;
  68             unsigned char b[4];
  69          } LINT;
  70          #define NS      75
  71          xdata char mess [NS], r, w, mar;                
  72          bit flNewGPS;
  73          xdata unsigned int Vz, koors, flNoKoord, liTimer_tick_GPS, liTimer_tick;
  74          xdata unsigned long LatGnd=0, LonGnd=0;
  75          //------------------------------------------------------------------------------
  76          void OutModem1(unsigned char Data, char i)
  77          {
  78   1              BufferInModem[i] = Data | 0x80;
  79   1      }
  80          
  81          //------------------------------------------------------------------------------
  82          void OutModem2(unsigned int Data, char i)
  83          {
  84   1              BufferInModem[i] = (Data & 0x007f)| 0x80;
  85   1              BufferInModem[i+1] = ((Data & 0x3f80) >> 7)| 0x80;
  86   1      }
  87          
  88          //------------------------------------------------------------------------------
  89          void OutModem4(unsigned long int Data, char i)
  90          {
  91   1              BufferInModem[i] = (Data & 0x0000007f)| 0x80;
  92   1              BufferInModem[i+1] = ((Data & 0x3f80) >> 7) | 0x80;
  93   1              BufferInModem[i+2] = ((Data & 0x1fc000) >> 14) | 0x80;
  94   1         BufferInModem[i+3] = ((Data & 0xfe00000)>> 21) | 0x80;
  95   1      }
  96          //------------------------------------------------------------------------------------
  97          void main(void)
  98          {
  99   1      //ADC
 100   1              xdata long Pressure = 0;
 101   1              xdata float PressureFl = 0.0;
 102   1      //UART
 103   1      //   xdata char RK_code[26], nByte = 0, KontrSumma = 0, PWM;
 104   1      //        unsigned int Value;
 105   1              INT Aint;
 106   1              FLOAT Bfloat;
 107   1              LINT tmpLong;
 108   1      //GPS
 109   1         bit ValidGPS, flPoint;       
 110   1              xdata unsigned char i_comma, tmpGPS[6], nLetter = 7;
 111   1              xdata unsigned long temp_koord;
 112   1              xdata unsigned int i;
 113   1      
 114   1              EA = 0;
 115   1              WDTCN     = 0xDE;       //выкл собаки
 116   1         WDTCN     = 0xAD;
 117   1              EA= 1;   
C51 COMPILER V9.00   SERVO6                                                                10/05/2012 13:57:29 PAGE 3   

 118   1              
 119   1              LED=0;
 120   1      
 121   1              Port_IO_Init();
 122   1              Oscillator_Init();   
 123   1              Interrupts_Init(); 
 124   1              Timer_Init();
 125   1              UART0_Init();
 126   1         UART1_Init();
 127   1              PCA_Init();
 128   1         ADC_Init();
 129   1      
 130   1              LirTarget = 0x03ff;
 131   1      //      Fdelta = 0;
 132   1              flNewGPS = 0;
 133   1              u0timer=0;
 134   1              while(1)
 135   1              {
 136   2                      for(iter=0; iter<16; iter++)
 137   2                      {
 138   3                              _nop_();
 139   3                      }
 140   2                      
 141   2      //ADC
 142   2                      if(DavlFlag==1)
 143   2                      {
 144   3                              EA = 0; 
 145   3                              Pressure =  Result * 2430 / 4095;
 146   3                              EA = 1; 
 147   3                              DavlFlag = 0;
 148   3                              PressureFl = Pressure + (PressureFl - Pressure)*0.15;
 149   3                      }
 150   2                      EIP2      |= 0x02;
 151   2      //Veter
 152   2                      if(VeterFlag==1)
 153   2                      {
 154   3                              Vspeed = (float)FREQT0/((float)TV*0.75);
 155   3                              Angle = 360. - (360.*(float)TV/(float)TA);
 156   3                              VeterFlag = 0;
 157   3                      }
 158   2      //GPS---------------------------------------------------------------------------
 159   2      
 160   2                      if(flNewGPS==1) 
 161   2                      {
 162   3                              flNewGPS = 0;
 163   3                      //rashifrovka GPS
 164   3                              if (r < w+mar*NS) 
 165   3                              {
 166   4                                      if(mess[r] == '$')
 167   4                                      {
 168   5                      nLetter = 0;
 169   5                                      }
 170   4                      else if ((nLetter == 0) && (mess[r] == 'G'))
 171   4                      nLetter++;
 172   4                      else if ((nLetter == 1) && (mess[r] == 'P'))
 173   4                      nLetter++;
 174   4                      else if ((nLetter == 2) && (mess[r] == 'R'))
 175   4                      nLetter++;
 176   4                       else if ((nLetter == 3) && (mess[r] == 'M'))
 177   4                       nLetter++;
 178   4                 else if ((nLetter == 4) && (mess[r] == 'C'))
 179   4                      {
C51 COMPILER V9.00   SERVO6                                                                10/05/2012 13:57:29 PAGE 4   

 180   5                      nLetter++;
 181   5                                              i_comma = 0;
 182   5                                              ValidGPS = 0;
 183   5                 } 
 184   4                              else if(mess[r] == ',')
 185   4                                      {
 186   5                                              i_comma++;
 187   5                                              i = 0;
 188   5                                              flPoint = 0;
 189   5                                      }
 190   4                              else if(i_comma == 2)
 191   4                                      {
 192   5                                              if(mess[r] == 'A') 
 193   5                                                      ValidGPS = 1;
 194   5                                              else
 195   5                                              {
 196   6                                                      ValidGPS = 0;
 197   6              //                                      flNoKoord = 1;
 198   6              //                                      liTimer_tick_GPS = liTimer_tick;
 199   6                                              }
 200   5                                      }
 201   4                      else if (ValidGPS)
 202   4                                      {
 203   5                                              if (i_comma == 3)                                       //Latitude
 204   5                                              {
 205   6                                                      if(mess[r] == '.')
 206   6                                                      {
 207   7                                                              flPoint = 1;
 208   7                                                              i = 0;
 209   7                                                      }
 210   6                                                      else if (flPoint == 0)                                          //celaya chast
 211   6                                                      {
 212   7                                                              tmpGPS[i++] = mess[r];
 213   7                                                              if(i == 2)
 214   7                                                              {
 215   8                                              tmpGPS[i] = 0;
 216   8                                                                      temp_koord = atoi(tmpGPS);
 217   8                                              temp_koord = 60UL*10000*temp_koord;
 218   8                                                              }       
 219   7                                                              else if(i == 4)
 220   7                                                              {
 221   8                                                                      tmpGPS[0] = tmpGPS[1] = '0';
 222   8                                              tmpGPS[i] = 0;
 223   8                                              temp_koord = temp_koord+10000UL*atoi(tmpGPS);
 224   8                                                              }       
 225   7                                                      }
 226   6                                                      else                                                                                            //drobnaya chast
 227   6                                                      {
 228   7                                                              tmpGPS[i++] = mess[r];
 229   7                                      tmpGPS[i] = 0;
 230   7                                                      }
 231   6                                              }
 232   5                                              else if (i_comma == 4)
 233   5                                              {
 234   6                                      temp_koord = temp_koord+atoi(tmpGPS);
 235   6      //-----------
 236   6      //lLatGnd = 55UL*60*10000+50UL*10000+8680;
 237   6      //--------
 238   6                                                      if (mess[r] == 'S')                                             //znak Latitude
 239   6                                                              LatGnd = 54000000UL-temp_koord;         //90UL*60*10000-koord;
 240   6                                                      else              
 241   6                                                              LatGnd = 54000000UL+temp_koord;         //90UL*60*10000+koord;
C51 COMPILER V9.00   SERVO6                                                                10/05/2012 13:57:29 PAGE 5   

 242   6                                              }
 243   5                                              else if (i_comma == 5)                          //Longitude
 244   5                                              {
 245   6                                                      if(mess[r] == '.')
 246   6                                                      {
 247   7                                                              flPoint = 1;
 248   7                                                              i = 0;
 249   7                                                      }
 250   6                                                      else if (flPoint == 0)                                          //celaya chast
 251   6                                                      {
 252   7                                                              tmpGPS[i++] = mess[r];
 253   7                                                              if(i == 3)
 254   7                                                              {
 255   8                                              tmpGPS[i] = 0;
 256   8                                              temp_koord = atoi(tmpGPS);
 257   8                                              temp_koord = 60UL*10000*temp_koord;
 258   8                                                              }       
 259   7                                                              else if(i == 5)
 260   7                                                              {
 261   8                                                                      tmpGPS[0] = tmpGPS[1] = tmpGPS[2] = '0';
 262   8                                              tmpGPS[i] = 0;
 263   8                                              temp_koord = temp_koord+10000UL*atoi(tmpGPS);
 264   8                                                              }       
 265   7                                                      }
 266   6                                                      else                                                                                            //drobnaya chast
 267   6                                                      {
 268   7                                                              tmpGPS[i++] = mess[r];
 269   7                                      tmpGPS[i] = 0;
 270   7                                                      }
 271   6                                              }
 272   5                                              else if (i_comma == 6)
 273   5                                              {
 274   6                                      temp_koord = temp_koord+atoi(tmpGPS);
 275   6      //----------------
 276   6      //lLonGnd = 49UL*60*10000+6UL*10000+3760;
 277   6      //----------------
 278   6                                                      if (mess[r] == 'W')                                             //znak Longitude
 279   6                                                              LonGnd = 108000000UL-temp_koord;                //180UL*60*10000-koord;
 280   6                                                      else       
 281   6                                                              LonGnd = temp_koord+108000000UL;                //180UL*60*10000;
 282   6                                              }
 283   5                                              else if (i_comma == 7)                                                  //skorost v uzlah
 284   5                                              {
 285   6                                                      if(mess[r] == '.')
 286   6                                                      {
 287   7                                                              flPoint = 1;
 288   7                                      Vz = 1.852*atoi(tmpGPS)/3.6;            //preobrazovat iz uzlov v m/s
 289   7      //---------
 290   7      //Vz = 20;
 291   7      //-----------
 292   7                                                      }
 293   6                                                      else if(flPoint == 0)
 294   6                                                      {
 295   7                                                              tmpGPS[i++] = mess[r];
 296   7                                      tmpGPS[i] = 0;
 297   7                                                      }
 298   6                      }
 299   5                                              else if (i_comma == 8)                                                  //kurs v gradusah
 300   5                                              {
 301   6                                                      if(mess[r] == '.')
 302   6                                                      {
 303   7                                                              flPoint = 1;
C51 COMPILER V9.00   SERVO6                                                                10/05/2012 13:57:29 PAGE 6   

 304   7                                      koors = atoi(tmpGPS);
 305   7                              if (koors < 0)
 306   7                              koors = 360+koors;
 307   7                                                              flNoKoord = 0;
 308   7                                                              flNewGPS = 1;
 309   7                                                              liTimer_tick_GPS = liTimer_tick;        
 310   7              //                          OutModem20();
 311   7      //-----------                                              
 312   7      //koors = 30;
 313   7      //-----------
 314   7                                                      }
 315   6                                                      else if(flPoint == 0)
 316   6                                                      {
 317   7                                                              tmpGPS[i++] = mess[r];
 318   7                                      tmpGPS[i] = 0;
 319   7                                                      }
 320   6                          }
 321   5                                      }
 322   4                                      r++;
 323   4                              if(r >= NS)
 324   4                                      {
 325   5                              r = 0;
 326   5                                              mar = 0;        
 327   5                                      }      
 328   4                              }
 329   3                      }
 330   2      
 331   2      
 332   2                              TI0=1;
 333   2                              RI0=1;
 334   2      //COM
 335   2                      if(u0timer>0xf)
 336   2                      {
 337   3                              LED=!LED;
 338   3                              u0timer = 0;
 339   3                              
 340   3      
 341   3                              //      ES0=1;  
 342   3                              if(wBFM > 3)
 343   3                              {
 344   4                                 unsigned char chtmp = 0;
 345   4                                      for (i = 0; i < 3; i++ )
 346   4                                      chtmp = chtmp ^ BuferFromModem[i];
 347   4                                      if(chtmp == BuferFromModem[3] && BuferFromModem[0] == 0x6e)
 348   4                                      {
 349   5                                              int tmp=0;
 350   5                                              tmp = BuferFromModem[1]&~0x80;
 351   5                              tmp |= ((int)(BuferFromModem[2]&~0x80)<<7);
 352   5                                              if(tmp<=360 && tmp>=0)
 353   5                                                      A_zad = tmp;
 354   5                                      }
 355   4                                      wBFM = 0;
 356   4                              }
 357   3                              TI0 = 1; //Read redy UART0
 358   3                              //Write to UART0--------------------------------------
 359   3      
 360   3                              BufferInModem[0] = 40;                  
 361   3                              BufferInModem[0] &= ~0x80;
 362   3                              BufferInModem[0] |= 0x40; //кодовый байт
 363   3                              OutModem4(LatGnd, 1);
 364   3                              OutModem4(LonGnd, 5);
 365   3                              OutModem2((int)Angle, 9);
C51 COMPILER V9.00   SERVO6                                                                10/05/2012 13:57:29 PAGE 7   

 366   3                              OutModem2((int)Vspeed, 11);
 367   3                              OutModem2((int)PressureFl, 13);
 368   3                      BufferInModem[15] = 0;
 369   3                              for (i = 0; i < 15; i++ )
 370   3                              BufferInModem[15] = BufferInModem[15] ^ BufferInModem[i];
 371   3                              
 372   3                              flTransmiter = 1;
 373   3                              r0 = 0;
 374   3                              rk = 16;
 375   3                              SFRPAGE = 0x00;
 376   3                              while (flTransmiter)
 377   3                              {
 378   4                                      if(r0 < rk)
 379   4                                      {
 380   5                                              flTransmiter = 1;
 381   5                                              SBUF0 = BufferInModem[r0++];
 382   5                                      }
 383   4                                      else
 384   4                                      {
 385   5                                              flTransmiter = 0;
 386   5                                      }
 387   4                              }
 388   3                              
 389   3                              BufferInModem[0] = 41;
 390   3                              BufferInModem[0] &= ~0x80;
 391   3                              BufferInModem[0] |= 0x40; //кодовый байт
 392   3                              OutModem2((int)A, 1);
 393   3                              BufferInModem[3] = 0;
 394   3                      for (i = 0; i < 3; i++ )
 395   3                              BufferInModem[3] = BufferInModem[3] ^ BufferInModem[i];
 396   3                                      
 397   3                              flTransmiter = 1;
 398   3              
 399   3                              r0 = 0;
 400   3                              rk = 4;
 401   3                              SFRPAGE = 0x00;
 402   3                              while (flTransmiter)
 403   3                              {
 404   4                                      if(r0 < rk)
 405   4                                      {
 406   5                                              flTransmiter = 1;
 407   5                                              SBUF0 = BufferInModem[r0++];
 408   5                                      }
 409   4                                      else
 410   4                                      {
 411   5                                              flTransmiter = 0;
 412   5                                      }
 413   4                              }
 414   3      
 415   3                              //ES0=0;
 416   3                      }
 417   2              }
 418   1      }
*** WARNING C280 IN LINE 105 OF SERVO6.C: 'Aint': unreferenced local variable
*** WARNING C280 IN LINE 106 OF SERVO6.C: 'Bfloat': unreferenced local variable
*** WARNING C280 IN LINE 107 OF SERVO6.C: 'tmpLong': unreferenced local variable
 419          //------------------------------------------------------------------------------------
 420          void INT0 (void) interrupt 0 //skorost vetra
 421          {
 422   1              EX0 =   0;
 423   1              VeterFlag = 1;
 424   1              TV = RTC - RTCV;
C51 COMPILER V9.00   SERVO6                                                                10/05/2012 13:57:29 PAGE 8   

 425   1              RTCV = RTC;
 426   1              return;
 427   1      }
 428          
 429          //------------------------------------------------------------------------------------
 430          void TIMER_ISR0 (void) interrupt 1
 431          {
 432   1              float tmp;
 433   1              unsigned char shim;
 434   1      
 435   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 436   1              SFRPAGE = TIMER01_PAGE;
 437   1              RTC++;
 438   1              u0timer++;
 439   1      
 440   1              EA = 0; //опрос ЛИР
 441   1              LirData = 0;
 442   1                              
 443   1              LIR_SCK = 1;    //---init
 444   1              LIR_SCK = 0;
 445   1                              
 446   1              LIR_SCK = 1;    //---D n-1
 447   1              LIR_SCK = 0;
 448   1                              
 449   1              LIR_SCK = 1;    //---D n-1
 450   1              LIR_SCK = 0;
 451   1              if(LIR_DATA != 0) 
 452   1                      LirData = LirData | (0x01 << (11));
 453   1      
 454   1              LIR_SCK = 1; 
 455   1              LIR_SCK = 0;
 456   1              if(LIR_DATA != 0) 
 457   1                      LirData = LirData | (0x01 << (10));
 458   1      
 459   1              LIR_SCK = 1; 
 460   1              LIR_SCK = 0;
 461   1              if(LIR_DATA != 0) 
 462   1                      LirData = LirData | (0x01 << (9));
 463   1      
 464   1              LIR_SCK = 1; 
 465   1              LIR_SCK = 0;
 466   1              if(LIR_DATA != 0) 
 467   1                      LirData = LirData | (0x1 << (8));
 468   1      
 469   1              LIR_SCK = 1; 
 470   1              LIR_SCK = 0;
 471   1              if(LIR_DATA!=0) 
 472   1                      LirData = LirData | (0x1 << (7));
 473   1      
 474   1              LIR_SCK = 1; 
 475   1              LIR_SCK = 0;
 476   1              if(LIR_DATA!=0) 
 477   1                      LirData = LirData | (0x1 << (6));
 478   1      
 479   1              LIR_SCK = 1; 
 480   1              LIR_SCK = 0;
 481   1              if(LIR_DATA!=0) 
 482   1                      LirData = LirData | (0x1 << (5));
 483   1      
 484   1              LIR_SCK = 1; 
 485   1              LIR_SCK = 0;
 486   1              if(LIR_DATA!=0) 
C51 COMPILER V9.00   SERVO6                                                                10/05/2012 13:57:29 PAGE 9   

 487   1                      LirData = LirData | (0x1 << (4));
 488   1      
 489   1              LIR_SCK = 1; 
 490   1              LIR_SCK = 0;
 491   1              if(LIR_DATA!=0) 
 492   1                      LirData = LirData | (0x1 << (3));
 493   1      
 494   1              LIR_SCK = 1; 
 495   1              LIR_SCK = 0;
 496   1              if(LIR_DATA!=0) 
 497   1                      LirData = LirData | (0x1 << (2));
 498   1      
 499   1              LIR_SCK = 1; 
 500   1              LIR_SCK = 0;
 501   1              if(LIR_DATA!=0) 
 502   1                      LirData = LirData | (0x1 << (1));
 503   1      
 504   1              LIR_SCK = 1; 
 505   1              LIR_SCK = 0;
 506   1              if(LIR_DATA!=0) 
 507   1                      LirData = LirData | (0x1 << (0));
 508   1      
 509   1              LIR_SCK = 1; 
 510   1              EA = 1;
 511   1              
 512   1      #define K 50.8
 513   1              tmp = 360.0/4095.0*LirData;
 514   1              if ((A > 270) && (tmp < 90))
 515   1              {
 516   2                      A = A+(tmp+360-A)/PCACLK*K;
 517   2                      if (A > 360)
 518   2                              A = A-360;
 519   2              }
 520   1              else if ((tmp > 270) && (A < 90))
 521   1              {
 522   2                      A = A+(tmp-A-360)/PCACLK*K;
 523   2                      if (A < 0)
 524   2                              A = A+360;
 525   2              }
 526   1              else
 527   1                      A = A+(tmp-A)/PCACLK*K;
 528   1      
 529   1              if ((A_pr > 270) && (A < 90))
 530   1                      V = V+((A+360-A_pr)*PCACLK-V)/PCACLK*K;
 531   1              else if ((A > 270) && (A_pr < 90))
 532   1                      V = V+((A-A_pr-360)*PCACLK-V)/PCACLK*K;
 533   1              else
 534   1                      V = V+((A-A_pr)*PCACLK-V)/PCACLK*K;
 535   1              if (V > 200) 
 536   1                      V = 200;
 537   1              else if (V < -200) 
 538   1                      V = -200;
 539   1              A_pr = A;
 540   1      
 541   1      
 542   1              //управление антеной--------------------------------------------------
 543   1              A_zad = 90.0;
 544   1              V_zad = (A_zad-A);
 545   1              while (V_zad > 180)
 546   1            V_zad -= 360;
 547   1              while (V_zad < -180)
 548   1            V_zad += 360;
C51 COMPILER V9.00   SERVO6                                                                10/05/2012 13:57:29 PAGE 10  

 549   1      
 550   1              V_zad = V_zad/40*200;   
 551   1              if(V_zad > 200) 
 552   1                      V_zad = 200;
 553   1              else if(V_zad < -200)   
 554   1                      V_zad = -200;
 555   1      
 556   1              tau = (V_zad-V)/200*0.000025;
 557   1              if (tau > 0.000025)
 558   1                      tau = 0.000025;
 559   1              else if (tau < -0.000025)
 560   1                      tau = -0.000025;
 561   1      
 562   1              shim = 0xff-0x3f*fabs(tau)/0.000025;    
 563   1              if (tau > 0)
 564   1              {
 565   2                      PCA0CN    = 0x40;
 566   2                 PCA0MD    = 0x01;
 567   2              PCA0CPM0  = 0x43;
 568   2                 PCA0CPM1  = 0x43;
 569   2                      PCA0CPH0  = 0xFF;
 570   2              PCA0CPH1  = shim;
 571   2              }
 572   1              else
 573   1              {
 574   2                      PCA0CN    = 0x40;
 575   2              PCA0MD    = 0x01;
 576   2                 PCA0CPM0  = 0x43;
 577   2              PCA0CPM1  = 0x43;
 578   2                 PCA0CPH0  = shim;
 579   2              PCA0CPH1  = 0xFF;
 580   2              }
 581   1              if(WSpeed!=0)
 582   1                      EX0=1;
 583   1      
 584   1              if(WAngle!=0)
 585   1                      EX1=1;
 586   1      
 587   1              SFRPAGE = SFRPAGE_SAVE;
 588   1              return;
 589   1      }
 590          
 591          
 592          
 593          //------------------------------------------------------------------------------------
 594          void INT1 (void) interrupt 2 //napravl vetra
 595          {
 596   1              EX1=0;
 597   1              TA = RTC - RTCA;
 598   1              RTCA = RTC;
 599   1              return;
 600   1      }
 601          
 602          //------------------------------------------------------------------------------------
 603          void COM_UART0_isr(void) interrupt 4
 604          {
 605   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 606   1              SFRPAGE = UART0_PAGE;
 607   1              
 608   1              if (RI0)
 609   1              {
 610   2                      BuferFromModem [wBFM++] = SBUF0;  // read character
C51 COMPILER V9.00   SERVO6                                                                10/05/2012 13:57:29 PAGE 11  

 611   2                      if(wBFM >= NBFM)
 612   2                      {
 613   3                      wBFM = 0;
 614   3                              marBFM = 1;
 615   3                      }
 616   2                      RI0 = 0;
 617   2              }
 618   1              if (TI0)
 619   1              {
 620   2                      if(flTransmiter == 0)
 621   2                              TI0 = 0;        
 622   2              }
 623   1      
 624   1              SFRPAGE = SFRPAGE_SAVE;
 625   1              return;
 626   1      }
 627          
 628          //-------------------------------------------------------------------
 629          
 630          void PCA_isr (void)interrupt 9 
 631          {
 632   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 633   1              SFRPAGE = PCA0_PAGE;
 634   1              CF = 0; //Сброс флага прерывания шимогенератора
 635   1              SFRPAGE = SFRPAGE_SAVE;
 636   1              return;
 637   1      }
 638          //-------------------------------------------------------------------
 639          
 640          void ADC0_ISR (void) interrupt 15
 641          {
 642   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 643   1              SFRPAGE = ADC0_PAGE;
 644   1              AD0INT = 0;                         // Clear ADC conversion complete
 645   1                                             // indicator
 646   1         accumulator += ADC0;                // Read ADC value and add to running
 647   1                                             // total
 648   1         int_dec--;                          // Update decimation counter
 649   1      
 650   1         if (int_dec == 0)                   // If zero, then post result
 651   1         {
 652   2                      int_dec = 256;               // Reset counter
 653   2            Result = accumulator >> 8;
 654   2            accumulator = 0L;                // Reset accumulator
 655   2                      DavlFlag = 1;
 656   2                      EIP2  &= ~0x02;
 657   2         }
 658   1              SFRPAGE = SFRPAGE_SAVE;
 659   1              return;
 660   1      }
 661          //-------------------------------------------------------------------
 662          void GPS_UART1_isr(void) interrupt 20
 663          {
 664   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 665   1              SFRPAGE = UART1_PAGE;
 666   1              if (RI1)
 667   1              {
 668   2                      flNewGPS = 1;
 669   2                      mess [w++] = SBUF1;  // read character
 670   2                      if(w >= NS)
 671   2                      {
 672   3                      w = 0;
C51 COMPILER V9.00   SERVO6                                                                10/05/2012 13:57:29 PAGE 12  

 673   3                              mar = 1;
 674   3                      }
 675   2                      RI1 = 0;
 676   2              }
 677   1              if (TI1)
 678   1              {
 679   2                              
 680   2              }
 681   1              SFRPAGE = SFRPAGE_SAVE;
 682   1              return;
 683   1      }
 684          
 685          
 686          //#endif
 687          
 688          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5049    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    283      27
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      25
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)

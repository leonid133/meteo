C51 COMPILER V9.00   SERVO9                                                                11/27/2012 08:28:53 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SERVO9
OBJECT MODULE PLACED IN servo9.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe servo9.c DB OE BR

line level    source

   1          
   2          #include "c8051f120.h"
   3          #include "init.h"
   4          #include "comport.h"
   5          #include <intrins.h>
   6          #include <ctype.h>
   7          #include <stdio.h>
   8          #include <stdlib.h>
   9          #include <math.h> 
  10          //system
  11          #define SYSCLK      24883200  // (24856840L * 1 / 1) 
  12          #define FREQT0 1183 //Hz
  13          
  14          //сигнальные
  15          sbit P3_3 = P3^3;
  16          sbit LED = P1^6;
  17          sbit LED2 = P2^6;
  18          sbit BUTTON = P3^7;
  19          xdata unsigned char InitFlag;
  20          xdata unsigned int iter;
  21          
  22          //ADC
  23          sfr16 ADC0     = 0xbe;   // ADC0 data
  24          bit DavlFlag = 0;
  25          xdata long Result;                    
  26          xdata unsigned int_dec = 256;    
  27          xdata long accumulator = 0L;       
  28          
  29          //LIR
  30          sbit LIR_DATA = P2^0; //P2^2;
  31          sbit LIR_SCK = P2^1;
  32          xdata unsigned int LData;
  33          xdata float A = 0, A_pr = 0, A_zad = 0, A_zad_new = 0, A_zad_pr = 0, V = 0, V_pr = 0, V_zad = 0, V_zad_pr 
             -= 0, u = 0, u_zad = 0, Accel=0, tau=0.0, K = 200.;
  34          xdata float Xtmp = 1.;
  35          
  36          typedef union INT {                   
  37             unsigned int i;
  38             unsigned char b[2];
  39          } INT;
  40          
  41          xdata int  UgolMaxV = 4, Vmax = 200, Umax = 2;
  42          xdata float taumax = 0.000025;
  43          
  44          xdata unsigned char F;
  45          xdata unsigned int delta, LirData, LirTarget, Fdelta;
  46          //Veter
  47          bit VeterFlag = 0;
  48          sbit WSpeed = P1^1;
  49          sbit WAngle = P1^3;
  50          
  51          xdata float Vspeed=0, Angle=0;
  52          xdata unsigned long RTC, RTCV, RTCA;
  53          xdata unsigned long TV,TA;
  54          
C51 COMPILER V9.00   SERVO9                                                                11/27/2012 08:28:53 PAGE 2   

  55          typedef union FLOAT {                   
  56             float f;
  57             unsigned char b[4];
  58          } FLOAT;
  59          //UART0
  60          #define NBFM            50
  61          xdata unsigned char BuferFromModem [NBFM]; 
  62          xdata unsigned char wBFM, rBFM, marBFM;
  63          xdata unsigned int u0timer;
  64          
  65          #define SIZE_BUFFER0            50
  66          xdata char BufferInModem[SIZE_BUFFER0]; 
  67          xdata int r0, rk;
  68          bit flTransmiter;       
  69          
  70          //GPS
  71          typedef union LINT {                   
  72             unsigned long i;
  73             unsigned char b[4];
  74          } LINT;
  75          #define NS      75
  76          xdata char mess [NS], r, w, mar;                
  77          bit flNewGPS;
  78          xdata unsigned int Vz, koors, flNoKoord, liTimer_tick_GPS, liTimer_tick;
  79          xdata unsigned long LatGnd=0, LonGnd=0;
  80          //------------------------------------------------------------------------------
  81          void OutModem1(unsigned char Data, char i)
  82          {
  83   1              BufferInModem[i] = Data | 0x80;
  84   1      }
  85          
  86          //------------------------------------------------------------------------------
  87          void OutModem2(unsigned int Data, char i)
  88          {
  89   1              BufferInModem[i] = (Data & 0x007f)| 0x80;
  90   1              BufferInModem[i+1] = ((Data & 0x3f80) >> 7)| 0x80;
  91   1      }
  92          
  93          //------------------------------------------------------------------------------
  94          void OutModem4(unsigned long int Data, char i)
  95          {
  96   1              BufferInModem[i] = (Data & 0x0000007f)| 0x80;
  97   1              BufferInModem[i+1] = ((Data & 0x3f80) >> 7) | 0x80;
  98   1              BufferInModem[i+2] = ((Data & 0x1fc000) >> 14) | 0x80;
  99   1         BufferInModem[i+3] = ((Data & 0xfe00000)>> 21) | 0x80;
 100   1      }
 101          //------------------------------------------------------------------------------------
 102          void main(void)
 103          {
 104   1      //ADC
 105   1              xdata long Pressure = 0;
 106   1              xdata float PressureFl = 0.0;
 107   1      //UART
 108   1      //   xdata char RK_code[26], nByte = 0, KontrSumma = 0, PWM;
 109   1      //        unsigned int Value;
 110   1              INT Aint;
 111   1              FLOAT Bfloat;
 112   1              LINT tmpLong;
 113   1      //GPS
 114   1         bit ValidGPS, flPoint;       
 115   1              xdata unsigned char i_comma, tmpGPS[6], nLetter = 7;
 116   1              xdata unsigned long temp_koord;
C51 COMPILER V9.00   SERVO9                                                                11/27/2012 08:28:53 PAGE 3   

 117   1              xdata unsigned int i;
 118   1      
 119   1         xdata unsigned char chtmp;
 120   1              xdata int tmp;
 121   1      
 122   1              EA = 0;
 123   1              WDTCN     = 0xDE;       //выкл собаки
 124   1         WDTCN     = 0xAD;
 125   1              EA= 1;   
 126   1              
 127   1              LED=0;
 128   1      
 129   1              Port_IO_Init();
 130   1              Oscillator_Init();   
 131   1              Interrupts_Init(); 
 132   1              Timer_Init();
 133   1              UART0_Init();
 134   1         UART1_Init();
 135   1              PCA_Init();
 136   1         ADC_Init();
 137   1      
 138   1      //      LirTarget = 0x03ff;
 139   1      //      Fdelta = 0;
 140   1              flNewGPS = 0;
 141   1              u0timer=0;
 142   1      
 143   1      //--
 144   1      Xtmp = 1.;
 145   1      
 146   1              while(1)
 147   1              {
 148   2      //ADC
 149   2                      EIP2 |= 0x02;
 150   2                      if(DavlFlag==1)
 151   2                      {
 152   3                              EA = 0; 
 153   3                              Pressure =  Result * 2430 / 4095;
 154   3                              EA = 1; 
 155   3                              DavlFlag = 0;
 156   3                              PressureFl = PressureFl + (Pressure - PressureFl)*0.5;
 157   3                              LED2=!LED2;
 158   3                      }
 159   2      
 160   2      //Veter
 161   2                      if(VeterFlag==1)
 162   2                      {
 163   3                              Vspeed = (float)FREQT0/((float)TV*0.75);        //???
 164   3                              Angle = 360. - (360.*(float)TV/(float)TA);
 165   3                              VeterFlag = 0;
 166   3                      }
 167   2      
 168   2                      //GPS---------------------------------------------------------------------------
 169   2                      if(flNewGPS == 1)       
 170   2                      {
 171   3                              flNewGPS = 0;
 172   3                              if (r < w+mar*NS) 
 173   3                              {
 174   4                                      if(mess[r] == '$')
 175   4                                      {
 176   5                      nLetter = 0;
 177   5                                      }
 178   4                      else if ((nLetter == 0) && (mess[r] == 'G'))
C51 COMPILER V9.00   SERVO9                                                                11/27/2012 08:28:53 PAGE 4   

 179   4                      nLetter++;
 180   4                      else if ((nLetter == 1) && (mess[r] == 'P'))
 181   4                      nLetter++;
 182   4                      else if ((nLetter == 2) && (mess[r] == 'R'))
 183   4                      nLetter++;
 184   4                       else if ((nLetter == 3) && (mess[r] == 'M'))
 185   4                       nLetter++;
 186   4                 else if ((nLetter == 4) && (mess[r] == 'C'))
 187   4                      {
 188   5                      nLetter++;
 189   5                                              i_comma = 0;
 190   5                                              ValidGPS = 0;
 191   5                 } 
 192   4                              else if(mess[r] == ',')
 193   4                                      {
 194   5                                              i_comma++;
 195   5                                              i = 0;
 196   5                                              flPoint = 0;
 197   5                                      }
 198   4                              else if(i_comma == 2)
 199   4                                      {
 200   5                                              if(mess[r] == 'A') 
 201   5                                                      ValidGPS = 1;
 202   5                                              else
 203   5                                              {
 204   6                                                      ValidGPS = 0;
 205   6              //                                      flNoKoord = 1;
 206   6              //                                      liTimer_tick_GPS = liTimer_tick;
 207   6                                              }
 208   5                                      }
 209   4                      else if (ValidGPS)
 210   4                                      {
 211   5                                              if (i_comma == 3)                                       //Latitude
 212   5                                              {
 213   6                                                      if(mess[r] == '.')
 214   6                                                      {
 215   7                                                              flPoint = 1;
 216   7                                                              i = 0;
 217   7                                                      }
 218   6                                                      else if (flPoint == 0)                                          //celaya chast
 219   6                                                      {
 220   7                                                              tmpGPS[i++] = mess[r];
 221   7                                                              if(i == 2)
 222   7                                                              {
 223   8                                              tmpGPS[i] = 0;
 224   8                                                                      temp_koord = atoi(tmpGPS);
 225   8                                              temp_koord = 60UL*10000*temp_koord;
 226   8                                                              }       
 227   7                                                              else if(i == 4)
 228   7                                                              {
 229   8                                                                      tmpGPS[0] = tmpGPS[1] = '0';
 230   8                                              tmpGPS[i] = 0;
 231   8                                              temp_koord = temp_koord+10000UL*atoi(tmpGPS);
 232   8                                                              }       
 233   7                                                      }
 234   6                                                      else                                                                                            //drobnaya chast
 235   6                                                      {
 236   7                                                              tmpGPS[i++] = mess[r];
 237   7                                      tmpGPS[i] = 0;
 238   7                                                      }
 239   6                                              }
 240   5                                              else if (i_comma == 4)
C51 COMPILER V9.00   SERVO9                                                                11/27/2012 08:28:53 PAGE 5   

 241   5                                              {
 242   6                                      temp_koord = temp_koord+atoi(tmpGPS);
 243   6      //-----------
 244   6      //lLatGnd = 55UL*60*10000+50UL*10000+8680;
 245   6      //--------
 246   6                                                      if (mess[r] == 'S')                                             //znak Latitude
 247   6                                                              LatGnd = 54000000UL-temp_koord;         //90UL*60*10000-koord;
 248   6                                                      else              
 249   6                                                              LatGnd = 54000000UL+temp_koord;         //90UL*60*10000+koord;
 250   6                                              }
 251   5                                              else if (i_comma == 5)                          //Longitude
 252   5                                              {
 253   6                                                      if(mess[r] == '.')
 254   6                                                      {
 255   7                                                              flPoint = 1;
 256   7                                                              i = 0;
 257   7                                                      }
 258   6                                                      else if (flPoint == 0)                                          //celaya chast
 259   6                                                      {
 260   7                                                              tmpGPS[i++] = mess[r];
 261   7                                                              if(i == 3)
 262   7                                                              {
 263   8                                              tmpGPS[i] = 0;
 264   8                                              temp_koord = atoi(tmpGPS);
 265   8                                              temp_koord = 60UL*10000*temp_koord;
 266   8                                                              }       
 267   7                                                              else if(i == 5)
 268   7                                                              {
 269   8                                                                      tmpGPS[0] = tmpGPS[1] = tmpGPS[2] = '0';
 270   8                                              tmpGPS[i] = 0;
 271   8                                              temp_koord = temp_koord+10000UL*atoi(tmpGPS);
 272   8                                                              }       
 273   7                                                      }
 274   6                                                      else                                                                                            //drobnaya chast
 275   6                                                      {
 276   7                                                              tmpGPS[i++] = mess[r];
 277   7                                      tmpGPS[i] = 0;
 278   7                                                      }
 279   6                                              }
 280   5                                              else if (i_comma == 6)
 281   5                                              {
 282   6                                      temp_koord = temp_koord+atoi(tmpGPS);
 283   6      //----------------
 284   6      //lLonGnd = 49UL*60*10000+6UL*10000+3760;
 285   6      //----------------
 286   6                                                      if (mess[r] == 'W')                                             //znak Longitude
 287   6                                                              LonGnd = 108000000UL-temp_koord;                //180UL*60*10000-koord;
 288   6                                                      else       
 289   6                                                              LonGnd = temp_koord+108000000UL;                //180UL*60*10000;
 290   6                                              }
 291   5                                              else if (i_comma == 7)                                                  //skorost v uzlah
 292   5                                              {
 293   6                                                      if(mess[r] == '.')
 294   6                                                      {
 295   7                                                              flPoint = 1;
 296   7                                      Vz = 1.852*atoi(tmpGPS)/3.6;            //preobrazovat iz uzlov v m/s
 297   7      //---------
 298   7      //Vz = 20;
 299   7      //-----------
 300   7                                                      }
 301   6                                                      else if(flPoint == 0)
 302   6                                                      {
C51 COMPILER V9.00   SERVO9                                                                11/27/2012 08:28:53 PAGE 6   

 303   7                                                              tmpGPS[i++] = mess[r];
 304   7                                      tmpGPS[i] = 0;
 305   7                                                      }
 306   6                      }
 307   5                                              else if (i_comma == 8)                                                  //kurs v gradusah
 308   5                                              {
 309   6                                                      if(mess[r] == '.')
 310   6                                                      {
 311   7                                                              flPoint = 1;
 312   7                                      koors = atoi(tmpGPS);
 313   7                              if (koors < 0)
 314   7                              koors = 360+koors;
 315   7                                                              flNoKoord = 0;
 316   7                                                              flNewGPS = 1;
 317   7                                                              liTimer_tick_GPS = liTimer_tick;        
 318   7              //                          OutModem20();
 319   7      //-----------                                              
 320   7      //koors = 30;
 321   7      //-----------
 322   7                                                      }
 323   6                                                      else if(flPoint == 0)
 324   6                                                      {
 325   7                                                              tmpGPS[i++] = mess[r];
 326   7                                      tmpGPS[i] = 0;
 327   7                                                      }
 328   6                          }
 329   5                                      }
 330   4                                      r++;
 331   4                              if(r >= NS)
 332   4                                      {
 333   5                              r = 0;
 334   5                                              mar = 0;        
 335   5                                      }      
 336   4                              }
 337   3                      }
 338   2      
 339   2                      //---------------------------------------------------------------------
 340   2      //              if(u0timer > (3*FREQT0))
 341   2                      //if((flTransmiter == 0) && (u0timer > FREQT0))
 342   2                      if(flTransmiter == 0)
 343   2                      {
 344   3                              u0timer = 0;
 345   3                              if(wBFM > 4)
 346   3                              {
 347   4                              P3_3=!P3_3;
 348   4                                      chtmp = 0;
 349   4                                      for (i = 0; i < 5; i++ )
 350   4                                      chtmp = chtmp ^ BuferFromModem[i];
 351   4                                      chtmp = chtmp | 0x80;
 352   4                                      if(chtmp == BuferFromModem[5] && BuferFromModem[0] == (46 | 0x40))
 353   4                                      {
 354   5                                              tmp = BuferFromModem[1]&~0x80;
 355   5                              tmp |= ((int)(BuferFromModem[2]&~0x80)<<7);
 356   5                                              if(tmp<=360 && tmp>=0)
 357   5                                              {
 358   6                                                      A_zad_new = tmp;
 359   6                                                      tmp = BuferFromModem[3]&~0x80;
 360   6                                                      tmp |= ((int)(BuferFromModem[4]&~0x80)<<7);
 361   6                                                      K = tmp*0.01;
 362   6                                              }
 363   5                                      }
 364   4                                      wBFM = 0;
C51 COMPILER V9.00   SERVO9                                                                11/27/2012 08:28:53 PAGE 7   

 365   4                              }
 366   3      
 367   3                              BufferInModem[0] = 0x40 | 40;                   
 368   3                              OutModem4(LatGnd, 1);
 369   3                              OutModem4(LonGnd, 5);
 370   3                              OutModem2((int)Angle, 9);
 371   3                              OutModem2((int)Vspeed, 11);
 372   3                              OutModem2((int)PressureFl, 13);
 373   3                      BufferInModem[15] = 0;
 374   3                              for (i = 0; i < 15; i++ )
 375   3                              BufferInModem[15] = BufferInModem[15] ^ BufferInModem[i];
 376   3                              BufferInModem[15] = 0x80 |      BufferInModem[15];
 377   3      
 378   3                              BufferInModem[16] = 0x40|41;
 379   3                              OutModem2((int)A, 17);
 380   3                      BufferInModem[19] = BufferInModem[16] ^ BufferInModem[17] ^ BufferInModem[18] | 0x80;
 381   3                              r0 = 0;
 382   3                              rk = 20;
 383   3                              //dopolnitelnye dannye
 384   3                              tmp = (int)(Accel);
 385   3                              OutModem2(tmp, 20);
 386   3                              rk+=2;
 387   3                              //A_zad, V, V_zad
 388   3                              tmp = (int)(A_zad*10.);
 389   3                              OutModem2(tmp, 22);
 390   3                              tmp = (int)(V*10.);
 391   3                              OutModem2(tmp, 24);
 392   3                              tmp = (int)(V_zad*10.);
 393   3                              OutModem2(tmp, 26);
 394   3                              rk+=6;
 395   3                              //      
 396   3                              flTransmiter = 1;
 397   3                              
 398   3                              SFRPAGE = 0x00;
 399   3                              TI0 = 1;
 400   3                      }
 401   2              }
 402   1      }
*** WARNING C280 IN LINE 110 OF SERVO9.C: 'Aint': unreferenced local variable
*** WARNING C280 IN LINE 111 OF SERVO9.C: 'Bfloat': unreferenced local variable
*** WARNING C280 IN LINE 112 OF SERVO9.C: 'tmpLong': unreferenced local variable
 403          //------------------------------------------------------------------------------------
 404          void INT0 (void) interrupt 0 //skorost vetra
 405          {
 406   1              EX0 =   0;
 407   1              VeterFlag = 1;
 408   1              TV = RTC - RTCV;
 409   1              RTCV = RTC;
 410   1              return;
 411   1      }
 412          
 413          //------------------------------------------------------------------------------------
 414          void TIMER_ISR0 (void) interrupt 1
 415          {
 416   1              xdata float tmp;
 417   1              xdata unsigned char shim;
 418   1              xdata unsigned int i_t0;
 419   1      
 420   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 421   1              SFRPAGE = TIMER01_PAGE;
 422   1              RTC++;
 423   1              u0timer++;
C51 COMPILER V9.00   SERVO9                                                                11/27/2012 08:28:53 PAGE 8   

 424   1              
 425   1              LData = 0;
 426   1              EA = 0; //опрос ЛИР
 427   1              
 428   1              LIR_SCK = 1;    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 429   1              LIR_SCK = 0;    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 430   1                              
 431   1      /*      LIR_SCK = 1;    //---D n-1
 432   1              shim++;
 433   1              LIR_SCK = 0;
 434   1              shim++;
 435   1      */                      
 436   1              LIR_SCK = 1;                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 437   1              LIR_SCK = 0;                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++; 
 438   1              LData = LData | LIR_DATA;       
 439   1      
 440   1              LIR_SCK = 1;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 441   1              LIR_SCK = 0;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 442   1              LData = (LData << 1) | LIR_DATA;        
 443   1              
 444   1              LIR_SCK = 1;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 445   1              LIR_SCK = 0;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 446   1              LData = (LData << 1) | LIR_DATA;        
 447   1      
 448   1              LIR_SCK = 1;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 449   1              LIR_SCK = 0;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 450   1              LData = (LData << 1) | LIR_DATA;        
 451   1              
 452   1              LIR_SCK = 1;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 453   1              LIR_SCK = 0;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 454   1              LData = (LData << 1) | LIR_DATA;        
 455   1      
 456   1              LIR_SCK = 1;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 457   1              LIR_SCK = 0;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 458   1              LData = (LData << 1) | LIR_DATA;        
 459   1      
 460   1              LIR_SCK = 1;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 461   1              LIR_SCK = 0;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 462   1              LData = (LData << 1) | LIR_DATA;        
 463   1      
 464   1              LIR_SCK = 1;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 465   1              LIR_SCK = 0;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 466   1              LData = (LData << 1) | LIR_DATA;        
 467   1      
 468   1              LIR_SCK = 1;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 469   1              LIR_SCK = 0;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 470   1              LData = (LData << 1) | LIR_DATA;        
 471   1      
 472   1              LIR_SCK = 1;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 473   1              LIR_SCK = 0;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 474   1              LData = (LData << 1) | LIR_DATA;        
 475   1      
 476   1              LIR_SCK = 1;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 477   1              LIR_SCK = 0;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 478   1              LData = (LData << 1) | LIR_DATA;        
 479   1      
 480   1              LIR_SCK = 1;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 481   1              LIR_SCK = 0;                                                    shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;shim++;
 482   1              LData = (LData << 1) | LIR_DATA;
 483   1      
 484   1              LIR_SCK = 1; 
 485   1              EA = 1;
C51 COMPILER V9.00   SERVO9                                                                11/27/2012 08:28:53 PAGE 9   

 486   1              
 487   1      
 488   1              //управление антеной------------------------------------------------------------------------
 489   1              tmp = 360.0/4095.0*LData;
 490   1              if ((A > 270) && (tmp < 90))
 491   1              {
 492   2                      A = tmp+360;//A = A+(tmp+360-A)/FREQT0*K;
 493   2                      if (A > 360)
 494   2                              A = A-360;
 495   2              }
 496   1              else if ((tmp > 270) && (A < 90))
 497   1              {
 498   2                      A = tmp-360;//A = A+(tmp-A-360)/FREQT0*K;
 499   2                      if (A < 0)
 500   2                              A = A+360;
 501   2              }
 502   1              else
 503   1                      A = tmp;//A = A+(tmp-A)/FREQT0*K;
 504   1      
 505   1              if ((A_pr > 270) && (A < 90))
 506   1                      V = (A+360-A_pr)*FREQT0;//V = V+((A+360-A_pr)*FREQT0-V)/FREQT0*K;
 507   1              else if ((A > 270) && (A_pr < 90))
 508   1                      V = (A-A_pr-360)*FREQT0;//V = V+((A-A_pr-360)*FREQT0-V)/FREQT0*K;
 509   1              else
 510   1                      V = (A-A_pr)*FREQT0;//V = V+((A-A_pr)*FREQT0-V)/FREQT0*K;
 511   1              A_pr = A;
 512   1      
 513   1              if (V > Vmax) 
 514   1                      V = Vmax;
 515   1              else if (V < -Vmax) 
 516   1                      V = -Vmax;
 517   1      
 518   1              u = u+((V-V_pr)*FREQT0-u)*.5;//u = u+((V-V_pr)*FREQT0-u)/FREQT0*K;
 519   1              
 520   1              V_pr = V;
 521   1              A_zad = A_zad_new;
 522   1              
 523   1              tmp = (A_zad-A);
 524   1              while (tmp > 180)
 525   1              tmp -= 360;
 526   1              while (tmp < -180)
 527   1              tmp += 360;
 528   1              tmp = tmp/UgolMaxV*Vmax;        
 529   1              
 530   1              if(tmp > Vmax)  
 531   1                      tmp = Vmax;
 532   1              else if(tmp < -Vmax)    
 533   1                      tmp = -Vmax;
 534   1              
 535   1              if(fabs(tmp) > fabs(V_zad))
 536   1              {
 537   2                      V_zad = V_zad + (tmp - V_zad)/FREQT0*200.;
 538   2              }
 539   1              else 
 540   1              {
 541   2                      V_zad = V_zad + ((tmp*0.01) - V_zad);
 542   2                      Xtmp = 0.5;
 543   2              }       
 544   1              tau = (V_zad-V)/Vmax*taumax;
 545   1      
 546   1              if (tau > taumax)
 547   1                      tau = taumax;
C51 COMPILER V9.00   SERVO9                                                                11/27/2012 08:28:53 PAGE 10  

 548   1              else if (tau < -taumax)
 549   1                      tau = -taumax;
 550   1      
 551   1              if(fabs(V)>2.) // ((A_zad-A)/fabs(A_zad-A)+(V_zad-V)/fabs(V_zad-V)==0))
 552   1              {
 553   2                      Xtmp = Xtmp + (Xtmp*0.9 - Xtmp);
 554   2              }
 555   1      
 556   1              if(fabs(V)<2.)
 557   1              {
 558   2                      Xtmp = Xtmp + (Xtmp*1.1 - Xtmp);
 559   2              }
 560   1      
 561   1              if(Xtmp>1.)
 562   1                      Xtmp=1.;
 563   1              else if(Xtmp<0.1)
 564   1                      Xtmp=0.1;
 565   1      
 566   1              tau = tau * Xtmp;
 567   1      //--
 568   1              if(fabs(u)>Accel)
 569   1                      Accel=fabs(u);
 570   1      
 571   1              shim = 0xff-0x3f*fabs(tau)/taumax;
 572   1              PCA0CN    = 0x40;
 573   1         PCA0MD    = 0x01;
 574   1              PCA0CPM0  = 0x43;
 575   1         PCA0CPM1  = 0x43;
 576   1              if (tau > 0.000002)
 577   1              {
 578   2                      PCA0CPH0  = 0xFF;
 579   2              PCA0CPH1  = shim;
 580   2              }
 581   1              else if(tau < -0.000002)
 582   1              {
 583   2                 PCA0CPH1  = 0xFF;
 584   2                      PCA0CPH0  = shim;
 585   2              }
 586   1              else
 587   1              {
 588   2                 PCA0CPH0  = 0xFF;
 589   2              PCA0CPH1  = 0xFF;
 590   2              }
 591   1              
 592   1              if(WSpeed != 0)
 593   1                      EX0 = 1;
 594   1      
 595   1              if(WAngle != 0)
 596   1                      EX1 = 1;
 597   1      
 598   1              SFRPAGE = SFRPAGE_SAVE;
 599   1              return;
 600   1      }
*** WARNING C280 IN LINE 418 OF SERVO9.C: 'i_t0': unreferenced local variable
 601          
 602          //------------------------------------------------------------------------------------
 603          void INT1 (void) interrupt 2 //napravl vetra
 604          {
 605   1              EX1=0;
 606   1              TA = RTC - RTCA;
 607   1              RTCA = RTC;
 608   1              return;
C51 COMPILER V9.00   SERVO9                                                                11/27/2012 08:28:53 PAGE 11  

 609   1      }
 610          
 611          //------------------------------------------------------------------------------------
 612          void COM_UART0_isr(void) interrupt 4
 613          {
 614   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 615   1              SFRPAGE = UART0_PAGE;
 616   1              
 617   1              if (RI0)
 618   1              {
 619   2                      BuferFromModem [wBFM++] = SBUF0;  // read character
 620   2                      if(wBFM >= NBFM)
 621   2                      {
 622   3                      wBFM = 0;
 623   3                              marBFM = 1;
 624   3                      }
 625   2                      RI0 = 0;
 626   2              }
 627   1              if (TI0)
 628   1              {
 629   2                      if(r0 < rk)
 630   2                      {
 631   3                              SBUF0 = BufferInModem[r0++];
 632   3                      }
 633   2                      else
 634   2                      {
 635   3                              flTransmiter = 0;
 636   3                      }
 637   2                      TI0 = 0;
 638   2              }
 639   1              
 640   1              SFRPAGE = SFRPAGE_SAVE;
 641   1              return;
 642   1      }
 643          
 644          //-------------------------------------------------------------------
 645          
 646          void PCA_isr (void)interrupt 9 
 647          {
 648   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 649   1              SFRPAGE = PCA0_PAGE;
 650   1              CF = 0;                                                                                 //Сброс флага прерывания шимогенератора
 651   1              SFRPAGE = SFRPAGE_SAVE;
 652   1              return;
 653   1      }
 654          //-------------------------------------------------------------------
 655          
 656          void ADC0_ISR (void) interrupt 15
 657          {
 658   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 659   1              SFRPAGE = ADC0_PAGE;
 660   1              AD0INT = 0;                         // Clear ADC conversion complete
 661   1                                             // indicator
 662   1         accumulator += ADC0;                // Read ADC value and add to running
 663   1                                             // total
 664   1         int_dec--;                          // Update decimation counter
 665   1      
 666   1         if (int_dec == 0)                   // If zero, then post result
 667   1         {
 668   2                      int_dec = 256;                          // Reset counter
 669   2            Result = accumulator >> 8;
 670   2            accumulator = 0L;                // Reset accumulator
C51 COMPILER V9.00   SERVO9                                                                11/27/2012 08:28:53 PAGE 12  

 671   2                      DavlFlag = 1;
 672   2                      EIP2  &= ~0x02;
 673   2         }
 674   1              SFRPAGE = SFRPAGE_SAVE;
 675   1              return;
 676   1      }
 677          //-------------------------------------------------------------------
 678          void GPS_UART1_isr(void) interrupt 20
 679          {
 680   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 681   1              SFRPAGE = UART1_PAGE;
 682   1              if (RI1)
 683   1              {
 684   2                      flNewGPS = 1;
 685   2                      mess [w++] = SBUF1;  // read character
 686   2                      if(w >= NS)
 687   2                      {
 688   3                      w = 0;
 689   3                              mar = 1;
 690   3                      }
 691   2                      RI1 = 0;
 692   2              }
 693   1              if (TI1)
 694   1              {
 695   2                              
 696   2              }
 697   1              SFRPAGE = SFRPAGE_SAVE;
 698   1              return;
 699   1      }
 700          
 701          
 702          //#endif
 703          
 704          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   6695    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    327      37
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)

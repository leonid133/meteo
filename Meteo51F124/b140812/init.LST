C51 COMPILER V9.00   INIT                                                                  08/14/2012 09:35:48 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE INIT
OBJECT MODULE PLACED IN init.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe init.c DB OE BR

line level    source

   1          #include "c8051f120.h"
   2          #include "init.h"
   3          
   4          //------------------------------------------------------------------------------------------
   5          void Reset_Sources_Init()
   6          {
   7   1          WDTCN     = 0xDE;
   8   1          WDTCN     = 0xAD;
   9   1      }
  10          
  11          void Timer_Init()
  12          {
  13   1      
  14   1      //---------------------------------------
  15   1          SFRPAGE   = TIMER01_PAGE;
  16   1          TCON      = 0x50;
  17   1          TMOD      = 0x22;
  18   1          TL0       = 0x4B;
  19   1          TH0       = 0xA0;
  20   1              TH1 = 0x2B;             
  21   1              TL1 = 0x11;
  22   1      
  23   1      //GPS, скорость 4800 бод, тактируется Timer1 
  24   1              SFRPAGE = UART1_PAGE;
  25   1              SCON1 = 0x10;           
  26   1              
  27   1              SFRPAGE =0x00;
  28   1              //CKCON = CKCON | 0x02; 
  29   1              /*регистр управления тактированием
  30   1                                                                              CKCON.3 = T0M = 1:      Timer 0 тактируется системным тактовым сигналом 
  31   1                                                                              (т.е. биты CKCON.1 и CKCON.0 не влияют)
  32   1                                                                              CKCON.1 = SCA1 = 1:     Биты выбора делителя частоты тактирования Timer 0, 1 
  33   1                                                                              CKCON.0 = SCA0 = 0:     SYSCLK/48*/
  34   1              
  35   1              //TMOD = TMOD | 0x20;           
  36   1              /*Регистр режима Таймеров 0 и 1
  37   1                                                                              TMOD.7 = GATE1 = 0: Таймер 1 включен, если TR1 = 1, независимо от логического уровня на входе /IN
             -T1.
  38   1                                                                              TMOD.6 = C/T1 = 0:  Т/С1  работает  как  таймер:  Таймер 1  инкрементируется  от  внутреннего  си
             -гнала   
  39   1                                                                                                      тактирования, который задается битом T1M (CKCON.4).  
  40   1                                                                              TMOD.5 = T1M1 = 1,      
  41   1                                                                              TMOD.4 = T1M0 = 0:      Выбор режима работы Таймера 1: 8-разрядный таймер/счетчик с автоперезагрузкой
             -*/
  42   1      
  43   1      
  44   1      
  45   1      //COM, 115200, Timer2
  46   1               SFRPAGE   = TMR2_PAGE;
  47   1      
  48   1               TMR2CF = 0x08; // Timer 2 Configuration
  49   1          RCAP2L = 0xF3;  // Timer 2 Reload Register Low Byte   BaudRate = 115200
  50   1          RCAP2H = 0xFF;  // Timer 2 Reload Register High Byte
  51   1      
  52   1          TMR2L = 0x00;   // Timer 2 Low Byte
C51 COMPILER V9.00   INIT                                                                  08/14/2012 09:35:48 PAGE 2   

  53   1          TMR2H = 0x00;   // Timer 2 High Byte
  54   1          TMR2CN = 0x04;  // Timer 2 CONTROL
  55   1               TR2 = 1;
  56   1               SFRPAGE = UART0_PAGE;
  57   1      
  58   1               SCON0 = 0x50;
  59   1               SSTA0 = 0x05;    
  60   1      //SMBus, , Timer3
  61   1          SFRPAGE   = TMR3_PAGE;
  62   1          TMR3CN    = 0x04;
  63   1          RCAP3L    = 0x9F;
  64   1          RCAP3H    = 0x38;
  65   1          SFRPAGE   = TMR4_PAGE;
  66   1          RCAP4L    = 0xC6;
  67   1          RCAP4H    = 0x06;
  68   1      }
  69          
  70          void PCA_Init()
  71          {
  72   1          SFRPAGE   = PCA0_PAGE;
  73   1          PCA0CN    = 0x40;
  74   1          PCA0MD    = 0x01;
  75   1          PCA0CPM0  = 0x40;
  76   1          PCA0CPM1  = 0x40;
  77   1          PCA0CPH0  = 0xFF;
  78   1          PCA0CPH1  = 0xFF;
  79   1      
  80   1      }
  81          
  82          void SMBus_Init()
  83          {
  84   1          SFRPAGE   = SMB0_PAGE;
  85   1          SMB0CN    = 0x49;
  86   1      }
  87          
  88          void ADC_Init()
  89          {
  90   1          SFRPAGE   = ADC0_PAGE;
  91   1          ADC0CN    = 0x80;
  92   1      }
  93          //------------------------------------------------------------------------------------------
  94          void Port_IO_Init(void)
  95          {
  96   1          // P0.0  -  TX0 (UART0), Open-Drain, Digital
  97   1          // P0.1  -  RX0 (UART0), Open-Drain, Digital
  98   1          // P0.2  -  SDA (SMBus), Open-Drain, Digital
  99   1          // P0.3  -  SCL (SMBus), Open-Drain, Digital
 100   1          // P0.4  -  TX1 (UART1), Open-Drain, Digital
 101   1          // P0.5  -  RX1 (UART1), Open-Drain, Digital
 102   1          // P0.6  -  CEX0 (PCA),  Push-Pull,  Digital ШИМ
 103   1          // P0.7  -  CEX1 (PCA),  Push-Pull,  Digital ШИМ
 104   1      
 105   1          // P1.0  -  T0 (Timer0), Push-Pull,  Digital
 106   1          // P1.1  -  wind Speed INT0 (Tmr0), Push-Pull,  Digital
 107   1          // P1.2  -  T1 (Timer1), Push-Pull,  Digital
 108   1          // P1.3  -  wind Angle INT1 (Tmr1), Push-Pull,  Digital
 109   1          // P1.4  -  T2 (Timer2), Push-Pull,  Digital
 110   1               //P2.0 ЛИР CLOCK
 111   1               //P2.1 ЛИР DATA
 112   1      
 113   1          SFRPAGE   = CONFIG_PAGE;
 114   1          P0MDOUT   = 0xC0;
C51 COMPILER V9.00   INIT                                                                  08/14/2012 09:35:48 PAGE 3   

 115   1          P1MDOUT   = 0xFF;
 116   1          P2MDOUT   = 0xFF;
 117   1          XBR0      = 0x15;
 118   1          XBR1      = 0x3E;
 119   1          XBR2      = 0x44;
 120   1      
 121   1      }
 122           
 123          void Oscillator_Init(void)
 124          {
 125   1          SFRPAGE   = CONFIG_PAGE;
 126   1          OSCICN    = 0x83;
 127   1      }
 128          
 129          void Interrupts_Init()
 130          {
 131   1          IE        = 0xBF;
 132   1          EIE1      = 0x0A;
 133   1          EIE2      = 0x43; 
 134   1      
 135   1         // IP        = 0x10;
 136   1         // EIP2      = 0x40;
 137   1      }
 138          
 139          void Init_Device(void)
 140          {
 141   1          Reset_Sources_Init();
 142   1          Timer_Init();
 143   1          PCA_Init();
 144   1          SMBus_Init();
 145   1               ADC_Init();
 146   1          Port_IO_Init();
 147   1          Oscillator_Init();
 148   1          Interrupts_Init();
 149   1      }
 150          //-----------------------------------------------------------------
 151          //GPS, скорость 4800 бод, тактируется Timer1 
 152          /*
 153          void UART1_Init(void)
 154          {
 155                  SFRPAGE = UART1_PAGE;
 156                  SCON1 = 0x10;                   /* Регистр управления COM1
 157                                                                                  SCON1.7 = S1MODE= 0: 8-ми разрядный COM-порт с изменяемой скоростью передачи данных
 158                                                                                  SCON1.5 = MCE1  = 0: (при S1MODE = SCON1.7 = 0) логический уровень стопового бита игнорируется
 159                                                                                  SCON1.4 = REN1 = 1: Разрешение приема   */
 160          /*      
 161                  SFRPAGE =0x00;
 162                  CKCON = CKCON | 0x02;   /*регистр управления тактированием
 163                                                                                  CKCON.3 = T0M = 1:      Timer 0 тактируется системным тактовым сигналом 
 164                                                                                  (т.е. биты CKCON.1 и CKCON.0 не влияют)
 165                                                                                  CKCON.1 = SCA1 = 1:     Биты выбора делителя частоты тактирования Timer 0, 1 
 166                                                                                  CKCON.0 = SCA0 = 0:     SYSCLK/48*/
 167          /*
 168                  TMOD = TMOD | 0x20;             /*Регистр режима Таймеров 0 и 1
 169                                                                                  TMOD.7 = GATE1 = 0: Таймер 1 включен, если TR1 = 1, независимо от логического уровня на входе /IN
             -T1.
 170                                                                                  TMOD.6 = C/T1 = 0:  Т/С1  работает  как  таймер:  Таймер 1  инкрементируется  от  внутреннего  си
             -гнала   
 171                                                                                                          тактирования, который задается битом T1M (CKCON.4).  
 172                                                                                  TMOD.5 = T1M1 = 1,      
 173                                                                                  TMOD.4 = T1M0 = 0:      Выбор режима работы Таймера 1: 8-разрядный таймер/счетчик с автоперезагрузкой
             -*/
C51 COMPILER V9.00   INIT                                                                  08/14/2012 09:35:48 PAGE 4   

 174          /*      TH1 = 148;              
 175                  TL1 = TH1;
 176                  TR1 = 1;  
 177          }*/
 178          //57600.Timer2------------------------------------------------------
 179          /*
 180          void UART0_Init(void)
 181          {
 182                  SFRPAGE = 0x00;
 183          
 184                  TMR2CF = 0x08; // Timer 2 Configuration
 185             RCAP2L = 0xF3;  // Timer 2 Reload Register Low Byte   BaudRate = 115200
 186             RCAP2H = 0xFF;  // Timer 2 Reload Register High Byte
 187          
 188             TMR2L = 0x00;   // Timer 2 Low Byte
 189             TMR2H = 0x00;   // Timer 2 High Byte
 190             TMR2CN = 0x04;  // Timer 2 CONTROL
 191                  TR2 = 1;
 192                  SFRPAGE = UART0_PAGE;
 193          
 194                  SCON0 = 0x50;
 195                  SSTA0 = 0x15;
 196          }
 197          */
 198          
 199          //------------------------------------------------------------------------------------------
 200          
 201          //#endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    185    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.00   SERVO4                                                                10/02/2012 13:36:11 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SERVO4
OBJECT MODULE PLACED IN servo4.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe servo4.c DB OE BR

line level    source

   1          
   2          #include "c8051f120.h"
   3          #include "init.h"
   4          #include "comport.h"
   5          #include <intrins.h>
   6          #include <ctype.h>
   7          #include <stdio.h>
   8          #include <stdlib.h>
   9          #include <math.h> 
  10          //system
  11          #define SYSCLK       (24856840L * 1 / 1) 
  12          #define FREQT0 8006 //Hz
  13          #define PCACLK  15
  14          
  15          //отладочные
  16          sbit P3_3 = P3^3;
  17          sbit LED = P1^6;
  18          sbit LED2 = P2^6;
  19          sbit BUTTON = P3^7;
  20          xdata unsigned char InitFlag;
  21          xdata unsigned int iter;
  22          
  23          //ADC
  24          sfr16 ADC0     = 0xbe;   // ADC0 data
  25          bit DavlFlag = 0;
  26          xdata long Result;                    
  27          xdata unsigned int_dec = 256;    
  28          xdata long accumulator = 0L;       
  29          //LIR
  30          #define V_MAX 0x15
  31          #define V_MIN 0x04
  32          #define t_MAX 0x3f
  33          
  34          sbit LIR_DATA = P2^2; //P2^0;
  35          sbit LIR_SCK = P2^1;
  36          
  37          xdata unsigned char F;
  38          xdata unsigned int delta, LirData, LirTarget, Fdelta, Olddelta;
  39          xdata unsigned int v_anteny=0, v_zadan, t_zadan;
  40          
  41          xdata float A=0.0, A_zad=0.0, V=0.0, V_zad=0.0, A_pr=0.0, tau=0.0;
  42          
  43          typedef union INT {                   
  44             unsigned int i;
  45             unsigned char b[2];
  46          } INT;
  47          //Veter
  48          bit VeterFlag = 0;
  49          sbit WSpeed = P1^1;
  50          sbit WAngle = P1^3;
  51          
  52          xdata float Vspeed, Angle;
  53          xdata unsigned long RTC, RTCV, RTCA;
  54          xdata unsigned long TV,TA;
  55          
C51 COMPILER V9.00   SERVO4                                                                10/02/2012 13:36:11 PAGE 2   

  56          typedef union FLOAT {                   
  57             float f;
  58             unsigned char b[4];
  59          } FLOAT;
  60          //UART0
  61          #define NBFM            50
  62          xdata unsigned char BuferFromModem [NBFM]; 
  63          xdata unsigned char wBFM, rBFM, marBFM;
  64          xdata unsigned int u0timer;
  65          
  66          #define SIZE_BUFFER0            50
  67          xdata char BufferInModem[SIZE_BUFFER0]; 
  68          xdata int r0, rk;
  69          bit flTransmiter;       
  70          
  71          //GPS
  72          #define NS      75
  73          xdata char mess [NS], r, w, mar;                
  74          bit flNewGPS;
  75          xdata unsigned int Vz, koors, flNoKoord, liTimer_tick_GPS, liTimer_tick;
  76          xdata unsigned long LatFly, LonFly;
  77          
  78          //------------------------------------------------------------------------------------
  79          void main(void)
  80          {
  81   1      //ADC
  82   1              xdata long Pressure=0;
  83   1      //UART
  84   1      //   xdata char RK_code[26], nByte = 0, KontrSumma = 0, PWM;
  85   1      //        unsigned int Value;
  86   1              INT Aint;
  87   1              FLOAT Bfloat;
  88   1      //GPS
  89   1         bit ValidGPS, flPoint;       
  90   1              xdata unsigned char i_comma, tmpGPS[6], nLetter = 7;
  91   1              xdata unsigned long temp_koord;
  92   1              xdata unsigned int i;
  93   1      
  94   1              EA = 0;
  95   1              WDTCN     = 0xDE;       //выкл собаки
  96   1         WDTCN     = 0xAD;
  97   1              EA= 1;   
  98   1              
  99   1              LED=0;
 100   1      
 101   1              Port_IO_Init();
 102   1              Oscillator_Init();   
 103   1              Interrupts_Init(); 
 104   1              Timer_Init();
 105   1              UART0_Init();
 106   1         UART1_Init();
 107   1              PCA_Init();
 108   1         ADC_Init();
 109   1      
 110   1              LirTarget = 0x03ff;
 111   1              Fdelta = 0;
 112   1              flNewGPS = 0;
 113   1              u0timer=0;
 114   1              while(1)
 115   1              {
 116   2                      for(iter=0; iter<16; iter++)
 117   2                      {
C51 COMPILER V9.00   SERVO4                                                                10/02/2012 13:36:11 PAGE 3   

 118   3                              _nop_();
 119   3                      }
 120   2                      
 121   2      //ADC
 122   2                      if(DavlFlag==1)
 123   2                      {
 124   3                              EA = 0; 
 125   3                              Pressure =  Result * 2430 / 4095;
 126   3                              EA = 1; 
 127   3                              DavlFlag = 0;
 128   3                      }
 129   2                      EIP2      |= 0x02;
 130   2      //Veter
 131   2                      if(VeterFlag==1)
 132   2                      {
 133   3                              Vspeed = (float)FREQT0/((float)TV*0.75);
 134   3                              Angle = 360. - (360.*(float)TV/(float)TA);
 135   3                              VeterFlag = 0;
 136   3                      }
 137   2      //GPS---------------------------------------------------------------------------
 138   2      
 139   2                      if(flNewGPS==1) 
 140   2                      {
 141   3                              flNewGPS = 0;
 142   3                      //rashifrovka GPS
 143   3                              if (r < w+mar*NS) 
 144   3                              {
 145   4                                      if(mess[r] == '$')
 146   4                                      {
 147   5                      nLetter = 0;
 148   5                                      }
 149   4                      else if ((nLetter == 0) && (mess[r] == 'G'))
 150   4                      nLetter++;
 151   4                      else if ((nLetter == 1) && (mess[r] == 'P'))
 152   4                      nLetter++;
 153   4                      else if ((nLetter == 2) && (mess[r] == 'R'))
 154   4                      nLetter++;
 155   4                       else if ((nLetter == 3) && (mess[r] == 'M'))
 156   4                       nLetter++;
 157   4                 else if ((nLetter == 4) && (mess[r] == 'C'))
 158   4                      {
 159   5                      nLetter++;
 160   5                                              i_comma = 0;
 161   5                                              ValidGPS = 0;
 162   5                 } 
 163   4                              else if(mess[r] == ',')
 164   4                                      {
 165   5                                              i_comma++;
 166   5                                              i = 0;
 167   5                                              flPoint = 0;
 168   5                                      }
 169   4                              else if(i_comma == 2)
 170   4                                      {
 171   5                                              if(mess[r] == 'A') 
 172   5                                                      ValidGPS = 1;
 173   5                                              else
 174   5                                              {
 175   6                                                      ValidGPS = 0;
 176   6              //                                      flNoKoord = 1;
 177   6              //                                      liTimer_tick_GPS = liTimer_tick;
 178   6                                              }
 179   5                                      }
C51 COMPILER V9.00   SERVO4                                                                10/02/2012 13:36:11 PAGE 4   

 180   4                      else if (ValidGPS)
 181   4                                      {
 182   5                                              if (i_comma == 3)                                       //Latitude
 183   5                                              {
 184   6                                                      if(mess[r] == '.')
 185   6                                                      {
 186   7                                                              flPoint = 1;
 187   7                                                              i = 0;
 188   7                                                      }
 189   6                                                      else if (flPoint == 0)                                          //celaya chast
 190   6                                                      {
 191   7                                                              tmpGPS[i++] = mess[r];
 192   7                                                              if(i == 2)
 193   7                                                              {
 194   8                                              tmpGPS[i] = 0;
 195   8                                                                      temp_koord = atoi(tmpGPS);
 196   8                                              temp_koord = 60UL*10000*temp_koord;
 197   8                                                              }       
 198   7                                                              else if(i == 4)
 199   7                                                              {
 200   8                                                                      tmpGPS[0] = tmpGPS[1] = '0';
 201   8                                              tmpGPS[i] = 0;
 202   8                                              temp_koord = temp_koord+10000UL*atoi(tmpGPS);
 203   8                                                              }       
 204   7                                                      }
 205   6                                                      else                                                                                            //drobnaya chast
 206   6                                                      {
 207   7                                                              tmpGPS[i++] = mess[r];
 208   7                                      tmpGPS[i] = 0;
 209   7                                                      }
 210   6                                              }
 211   5                                              else if (i_comma == 4)
 212   5                                              {
 213   6                                      temp_koord = temp_koord+atoi(tmpGPS);
 214   6      //-----------
 215   6      //lLatFly = 55UL*60*10000+50UL*10000+8680;
 216   6      //--------
 217   6                                                      if (mess[r] == 'S')                                             //znak Latitude
 218   6                                                              LatFly = 54000000UL-temp_koord;         //90UL*60*10000-koord;
 219   6                                                      else              
 220   6                                                              LatFly = 54000000UL+temp_koord;         //90UL*60*10000+koord;
 221   6                                              }
 222   5                                              else if (i_comma == 5)                          //Longitude
 223   5                                              {
 224   6                                                      if(mess[r] == '.')
 225   6                                                      {
 226   7                                                              flPoint = 1;
 227   7                                                              i = 0;
 228   7                                                      }
 229   6                                                      else if (flPoint == 0)                                          //celaya chast
 230   6                                                      {
 231   7                                                              tmpGPS[i++] = mess[r];
 232   7                                                              if(i == 3)
 233   7                                                              {
 234   8                                              tmpGPS[i] = 0;
 235   8                                              temp_koord = atoi(tmpGPS);
 236   8                                              temp_koord = 60UL*10000*temp_koord;
 237   8                                                              }       
 238   7                                                              else if(i == 5)
 239   7                                                              {
 240   8                                                                      tmpGPS[0] = tmpGPS[1] = tmpGPS[2] = '0';
 241   8                                              tmpGPS[i] = 0;
C51 COMPILER V9.00   SERVO4                                                                10/02/2012 13:36:11 PAGE 5   

 242   8                                              temp_koord = temp_koord+10000UL*atoi(tmpGPS);
 243   8                                                              }       
 244   7                                                      }
 245   6                                                      else                                                                                            //drobnaya chast
 246   6                                                      {
 247   7                                                              tmpGPS[i++] = mess[r];
 248   7                                      tmpGPS[i] = 0;
 249   7                                                      }
 250   6                                              }
 251   5                                              else if (i_comma == 6)
 252   5                                              {
 253   6                                      temp_koord = temp_koord+atoi(tmpGPS);
 254   6      //----------------
 255   6      //lLonFly = 49UL*60*10000+6UL*10000+3760;
 256   6      //----------------
 257   6                                                      if (mess[r] == 'W')                                             //znak Longitude
 258   6                                                              LonFly = 108000000UL-temp_koord;                //180UL*60*10000-koord;
 259   6                                                      else       
 260   6                                                              LonFly = temp_koord+108000000UL;                //180UL*60*10000;
 261   6                                              }
 262   5                                              else if (i_comma == 7)                                                  //skorost v uzlah
 263   5                                              {
 264   6                                                      if(mess[r] == '.')
 265   6                                                      {
 266   7                                                              flPoint = 1;
 267   7                                      Vz = 1.852*atoi(tmpGPS)/3.6;            //preobrazovat iz uzlov v m/s
 268   7      //---------
 269   7      //Vz = 20;
 270   7      //-----------
 271   7                                                      }
 272   6                                                      else if(flPoint == 0)
 273   6                                                      {
 274   7                                                              tmpGPS[i++] = mess[r];
 275   7                                      tmpGPS[i] = 0;
 276   7                                                      }
 277   6                      }
 278   5                                              else if (i_comma == 8)                                                  //kurs v gradusah
 279   5                                              {
 280   6                                                      if(mess[r] == '.')
 281   6                                                      {
 282   7                                                              flPoint = 1;
 283   7                                      koors = atoi(tmpGPS);
 284   7                              if (koors < 0)
 285   7                              koors = 360+koors;
 286   7                                                              flNoKoord = 0;
 287   7                                                              flNewGPS = 1;
 288   7                                                              liTimer_tick_GPS = liTimer_tick;        
 289   7              //                          OutModem20();
 290   7      //-----------                                              
 291   7      //koors = 30;
 292   7      //-----------
 293   7                                                      }
 294   6                                                      else if(flPoint == 0)
 295   6                                                      {
 296   7                                                              tmpGPS[i++] = mess[r];
 297   7                                      tmpGPS[i] = 0;
 298   7                                                      }
 299   6                          }
 300   5                                      }
 301   4                                      r++;
 302   4                              if(r >= NS)
 303   4                                      {
C51 COMPILER V9.00   SERVO4                                                                10/02/2012 13:36:11 PAGE 6   

 304   5                              r = 0;
 305   5                                              mar = 0;        
 306   5                                      }      
 307   4                              }
 308   3                      }
 309   2      
 310   2      
 311   2      //COM
 312   2                      if(u0timer>0xf0)
 313   2                      {
 314   3                              u0timer = 0;
 315   3                              //      ES0=1;
 316   3                              if(wBFM > 4)
 317   3                              {
 318   4                                      if(BuferFromModem [wBFM-1]==0x41)
 319   4                                      {
 320   5                                              if(BuferFromModem [wBFM-4]==0x40)
 321   5                                              {
 322   6                                                      Aint.b[0] = BuferFromModem[wBFM-3];
 323   6                                                      Aint.b[1] = BuferFromModem[wBFM-2];
 324   6                                                      if(Aint.i<=0x0fff)
 325   6                                                      {
 326   7                                                              LirTarget = Aint.i;
 327   7                                                      }
 328   6                                              }       
 329   5                                      }
 330   4                                      wBFM = 0;
 331   4                              }
 332   3                              //      TI0 = 1; //Read redy UART0
 333   3                              //Write to UART0--------------------------------------
 334   3                              Aint.i = LirData;
 335   3                              BufferInModem[0] = 0x40+1;
 336   3                              BufferInModem[1] = Aint.b[0];           
 337   3                              BufferInModem[2] = Aint.b[1];
 338   3                              Bfloat.f= Vspeed; 
 339   3                              BufferInModem[3] = Bfloat.b[0];
 340   3                              BufferInModem[4] = Bfloat.b[1];
 341   3                              BufferInModem[5] = Bfloat.b[2];
 342   3                              BufferInModem[6] = Bfloat.b[3];
 343   3                              Bfloat.f= Angle;
 344   3                              BufferInModem[7] = Bfloat.b[0];
 345   3                              BufferInModem[8] = Bfloat.b[1];
 346   3                              BufferInModem[9] = Bfloat.b[2];
 347   3                              BufferInModem[10] = Bfloat.b[3];
 348   3                              BufferInModem[11] = 0x40;
 349   3                         BufferInModem[12] = 0;
 350   3                      for (i = 0; i < 12; i++ )
 351   3                              BufferInModem[12] = BufferInModem[12] ^ BufferInModem[i];
 352   3                      BufferInModem[12] = 0x80 | BufferInModem[12];
 353   3      
 354   3                              flTransmiter = 1;
 355   3              
 356   3                              r0 = 0;
 357   3                              rk = 13;
 358   3                              SFRPAGE = 0x00;
 359   3                              while (flTransmiter)
 360   3                              {
 361   4                                      if(r0 < rk)
 362   4                                      {
 363   5                                              flTransmiter = 1;
 364   5                                              SBUF0 = BufferInModem[r0++];
 365   5                                      }
C51 COMPILER V9.00   SERVO4                                                                10/02/2012 13:36:11 PAGE 7   

 366   4                                      else
 367   4                                      {
 368   5                                              flTransmiter = 0;
 369   5                                      }
 370   4                              }
 371   3                              //ES0=0;
 372   3                      }
 373   2              }
 374   1      }
 375          //------------------------------------------------------------------------------------
 376          void INT0 (void) interrupt 0 //skorost vetra
 377          {
 378   1              EX0 =   0;
 379   1              VeterFlag = 1;
 380   1              TV = RTC - RTCV;
 381   1              RTCV = RTC;
 382   1              return;
 383   1      }
 384          
 385          //------------------------------------------------------------------------------------
 386          void TIMER_ISR0 (void) interrupt 1
 387          {
 388   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 389   1              SFRPAGE = TIMER01_PAGE;
 390   1              RTC++;
 391   1              u0timer++;
 392   1              if(WSpeed!=0)
 393   1                      EX0=1;
 394   1      
 395   1              if(WAngle!=0)
 396   1                      EX1=1;
 397   1      
 398   1              SFRPAGE = SFRPAGE_SAVE;
 399   1              return;
 400   1      }
 401          
 402          
 403          
 404          //------------------------------------------------------------------------------------
 405          void INT1 (void) interrupt 2 //napravl vetra
 406          {
 407   1              EX1=0;
 408   1              TA = RTC - RTCA;
 409   1              RTCA = RTC;
 410   1              return;
 411   1      }
 412          
 413          //------------------------------------------------------------------------------------
 414          void COM_UART0_isr(void) interrupt 4
 415          {
 416   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 417   1              SFRPAGE = UART0_PAGE;
 418   1              
 419   1              if (RI0)
 420   1              {
 421   2                      BuferFromModem [wBFM++] = SBUF0;  // read character
 422   2                      if(wBFM >= NBFM)
 423   2                      {
 424   3                      wBFM = 0;
 425   3                              marBFM = 1;
 426   3                      }
 427   2                      RI0 = 0;
C51 COMPILER V9.00   SERVO4                                                                10/02/2012 13:36:11 PAGE 8   

 428   2              }
 429   1              if (TI0)
 430   1              {
 431   2                      if(flTransmiter == 0)
 432   2                              TI0 = 0;        
 433   2              }
 434   1      
 435   1              SFRPAGE = UART1_PAGE;
 436   1              if (RI1)
 437   1              {
 438   2                      flNewGPS = 1;
 439   2                      mess [w++] = SBUF1;  // read character
 440   2                      if(w >= NS)
 441   2                      {
 442   3                      w = 0;
 443   3                              mar = 1;
 444   3                      }
 445   2                      RI1 = 0;
 446   2              }
 447   1              SFRPAGE = SFRPAGE_SAVE;
 448   1              return;
 449   1      }
 450          
 451          //upravlenie antenoi---------------------------------------------------
 452          void PCA_isr (void)interrupt 9
 453          {
 454   1              float tmp;
 455   1              unsigned char shim;
 456   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 457   1              SFRPAGE = PCA0_PAGE;
 458   1              CF = 0;
 459   1      
 460   1              EA = 0; //опрос ЛИР
 461   1              LirData = 0;
 462   1                              
 463   1              LIR_SCK = 1;    //---init
 464   1              LIR_SCK = 0;
 465   1                              
 466   1              LIR_SCK = 1;    //---D n-1
 467   1              LIR_SCK = 0;
 468   1                              
 469   1              LIR_SCK = 1;    //---D n-1
 470   1              LIR_SCK = 0;
 471   1              if(LIR_DATA != 0) 
 472   1                      LirData = LirData | (0x01 << (11));
 473   1      
 474   1              LIR_SCK = 1; 
 475   1              LIR_SCK = 0;
 476   1              if(LIR_DATA != 0) 
 477   1                      LirData = LirData | (0x01 << (10));
 478   1      
 479   1              LIR_SCK = 1; 
 480   1              LIR_SCK = 0;
 481   1              if(LIR_DATA != 0) 
 482   1                      LirData = LirData | (0x01 << (9));
 483   1      
 484   1              LIR_SCK = 1; 
 485   1              LIR_SCK = 0;
 486   1              if(LIR_DATA != 0) 
 487   1                      LirData = LirData | (0x1 << (8));
 488   1      
 489   1              LIR_SCK = 1; 
C51 COMPILER V9.00   SERVO4                                                                10/02/2012 13:36:11 PAGE 9   

 490   1              LIR_SCK = 0;
 491   1              if(LIR_DATA!=0) 
 492   1                      LirData = LirData | (0x1 << (7));
 493   1      
 494   1              LIR_SCK = 1; 
 495   1              LIR_SCK = 0;
 496   1              if(LIR_DATA!=0) 
 497   1                      LirData = LirData | (0x1 << (6));
 498   1      
 499   1              LIR_SCK = 1; 
 500   1              LIR_SCK = 0;
 501   1              if(LIR_DATA!=0) 
 502   1                      LirData = LirData | (0x1 << (5));
 503   1      
 504   1              LIR_SCK = 1; 
 505   1              LIR_SCK = 0;
 506   1              if(LIR_DATA!=0) 
 507   1                      LirData = LirData | (0x1 << (4));
 508   1      
 509   1              LIR_SCK = 1; 
 510   1              LIR_SCK = 0;
 511   1              if(LIR_DATA!=0) 
 512   1                      LirData = LirData | (0x1 << (3));
 513   1      
 514   1              LIR_SCK = 1; 
 515   1              LIR_SCK = 0;
 516   1              if(LIR_DATA!=0) 
 517   1                      LirData = LirData | (0x1 << (2));
 518   1      
 519   1              LIR_SCK = 1; 
 520   1              LIR_SCK = 0;
 521   1              if(LIR_DATA!=0) 
 522   1                      LirData = LirData | (0x1 << (1));
 523   1      
 524   1              LIR_SCK = 1; 
 525   1              LIR_SCK = 0;
 526   1              if(LIR_DATA!=0) 
 527   1                      LirData = LirData | (0x1 << (0));
 528   1      
 529   1              LIR_SCK = 1; 
 530   1              EA = 1;
 531   1      
 532   1              tmp = 360.0/4095.0*LirData;
 533   1              A = A+(tmp-A)/PCACLK*1.5;
 534   1      
 535   1              V = V+((A-A_pr)*PCACLK-V)/PCACLK*1.5;
 536   1              if (V > 500) 
 537   1                      V = 500;
 538   1              else if (V < -500) 
 539   1                      V = -500;
 540   1              A_pr = A;
 541   1              if(LED==1)
 542   1              {
 543   2                      LED=0;
 544   2              }
 545   1      
 546   1      /*
 547   1               H_filtr = H_filtr+(H-H_filtr)/FREQ*0.8;
 548   1               H_dat = H_dat+(H-H_dat)/FREQ/0.3;
 549   1               Vy_dat = Vy_dat+((H_dat-H_dat_pr)*FREQ-Vy_dat)/FREQ/0.3;
 550   1               H_dat_pr = H_dat;
 551   1      
C51 COMPILER V9.00   SERVO4                                                                10/02/2012 13:36:11 PAGE 10  

 552   1      
 553   1                         while (tmp > M_PI)
 554   1                      tmp -= D_PI;
 555   1                         while (tmp < -M_PI)
 556   1                      tmp += D_PI;
 557   1      
 558   1                         tmp = ToGrad*tmp;            
 559   1                              if(tmp > 42)
 560   1                                      tmp = 42;
 561   1                         else if(tmp < -42)
 562   1                                      tmp = -42;
 563   1                              Kren_zad_buf = tmp;
 564   1                      }
 565   1      */
 566   1      
 567   1              //управление антеной--------------------------------------------------
 568   1              
 569   1              V_zad = (A_zad-A);
 570   1         while (V_zad > 180)
 571   1                      V_zad -= 360;
 572   1         while (V_zad < -180)
 573   1                      V_zad += 360;   
 574   1      
 575   1              V_zad = V_zad/0.85;     
 576   1              if (V_zad > 400)
 577   1                      V_zad = 400;
 578   1              else if (V_zad < -400)
 579   1                      V_zad = -400;
 580   1      
 581   1              tau = (V_zad-V)/400*0.000025;
 582   1      
 583   1              if (tau > 0.000025)
 584   1                      tau = 0.000025;
 585   1              else if (tau < -0.000025)
 586   1                      tau = -0.000025;
 587   1      
 588   1              tmp = 0x3f * fabs(tau)/0.000025; 
 589   1              shim = tmp;
 590   1              shim = 0xff - shim;
 591   1              if (tau > 0)
 592   1              {
 593   2                      PCA0CN    = 0x40;
 594   2                 PCA0MD    = 0x01;
 595   2              PCA0CPM0  = 0x43;
 596   2                 PCA0CPM1  = 0x43;
 597   2                      PCA0CPH0  = 0xFF;
 598   2              PCA0CPH1  = shim;
 599   2              }
 600   1              else
 601   1              {
 602   2                      PCA0CN    = 0x40;
 603   2              PCA0MD    = 0x01;
 604   2                 PCA0CPM0  = 0x43;
 605   2              PCA0CPM1  = 0x43;
 606   2                 PCA0CPH0  = shim;
 607   2              PCA0CPH1  = 0xFF;
 608   2              }
 609   1      
 610   1              SFRPAGE = SFRPAGE_SAVE;
 611   1              return;
 612   1      }
 613          
C51 COMPILER V9.00   SERVO4                                                                10/02/2012 13:36:11 PAGE 11  

 614          //-------------------------------------------------------------------
 615          
 616          void ADC0_ISR (void) interrupt 15
 617          {
 618   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 619   1              SFRPAGE = ADC0_PAGE;
 620   1              AD0INT = 0;                         // Clear ADC conversion complete
 621   1                                             // indicator
 622   1         accumulator += ADC0;                // Read ADC value and add to running
 623   1                                             // total
 624   1         int_dec--;                          // Update decimation counter
 625   1      
 626   1         if (int_dec == 0)                   // If zero, then post result
 627   1         {
 628   2                      int_dec = 256;               // Reset counter
 629   2            Result = accumulator >> 8;
 630   2            accumulator = 0L;                // Reset accumulator
 631   2                      DavlFlag = 1;
 632   2                      EIP2  &= ~0x02;
 633   2         }
 634   1              SFRPAGE = SFRPAGE_SAVE;
 635   1              return;
 636   1      }
 637          //-------------------------------------------------------------------
 638          void GPS_UART1_isr(void) interrupt 20
 639          {
 640   1              xdata char SFRPAGE_SAVE = SFRPAGE;
 641   1              SFRPAGE = UART1_PAGE;
 642   1              if (RI1)
 643   1              {
 644   2                      flNewGPS = 1;
 645   2                      mess [w++] = SBUF1;  // read character
 646   2                      if(w >= NS)
 647   2                      {
 648   3                      w = 0;
 649   3                              mar = 1;
 650   3                      }
 651   2                      RI1 = 0;
 652   2              }
 653   1              if (TI1)
 654   1              {
 655   2                              
 656   2              }
 657   1              SFRPAGE = SFRPAGE_SAVE;
 658   1              return;
 659   1      }
 660          
 661          
 662          //#endif
 663          
 664          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3875    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    287      23
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4       2
END OF MODULE INFORMATION.

C51 COMPILER V9.00   SERVO4                                                                10/02/2012 13:36:11 PAGE 12  


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
